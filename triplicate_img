#!/usr/bin/env bash

display_help() {
    echo "Usage: $0 IMAGE_DIR [small|medium|large] [QUALITY]"
    echo
    echo "Arguments:"
    echo "  IMAGE_DIR     The directory containing images to be compressed."
    echo "  [size]        (Optional) Specify the size category: small, medium, or large."
    echo "                Defaults to 'medium' if not specified."
    echo "  [QUALITY]     (Optional) Specify the image quality (1-100). Defaults to 90."
    echo
    echo "Example:"
    echo "  $0 /path/to/images medium 80"
    exit 1
}

if ! command -v convert &>/dev/null; then
    echo "ImageMagick is not installed. Please install it to use this script."
    exit 1
fi

# Check for help option
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    display_help
fi

# Ensure at least one argument is provided
if [ -z "$1" ]; then
    echo "Error: IMAGE_DIR is required."
    display_help
fi

IMAGE_DIR="$1"

# Define the three default dimensions to which the images should be compressed
SMALL_DIMENSIONS=(800x600 640x480 320x240)
MEDIUM_DIMENSIONS=(1024x768 800x600 640x480)
LARGE_DIMENSIONS=(1600x1200 1280x960 1024x768)

# Check if the user has specified small, medium, or large images
if [[ "$2" == "small" ]]; then
    DIMENSIONS=("${SMALL_DIMENSIONS[@]}")
elif [[ "$2" == "medium" ]]; then
    DIMENSIONS=("${MEDIUM_DIMENSIONS[@]}")
elif [[ "$2" == "large" ]]; then
    DIMENSIONS=("${LARGE_DIMENSIONS[@]}")
else
    # Use the default dimensions if no optional parameter is specified
    DIMENSIONS=("${MEDIUM_DIMENSIONS[@]}")
fi

# quality setting
if [ -n "$3" ] && [ "$3" -eq "$3" ] 2>/dev/null; then
    QUAL=$3
else
    QUAL=90
fi

# Create the compressed directory if it doesn't exist
mkdir -p ${IMAGE_DIR}/compressed

# Loop through the dimensions and compress the images
for SIZE in "${DIMENSIONS[@]}"; do
    # Loop through the images in the directory
    for FILE in "${IMAGE_DIR}"/*.*; do
        # Get the file extension
        EXTENSION="${FILE##*.}"

        # Check if the file is an image
        if [[ "$EXTENSION" =~ ^(jpg|jpeg|png|gif|avif|webp)$ ]]; then
            # Get the file name without the extension
            FILENAME="${FILE%.*}"

            # Convert the file name to a slug
            SLUG="$(slugify "$(basename "${FILENAME}")")"
            DIMENSIONINDEX=0
            for I in "${DIMENSIONS[@]}"; do
                if [[ "${I}" == "${SIZE}" ]]; then
                    if [[ "${DIMENSIONINDEX}" == "0" ]]; then
                        LABEL="lg"
                    elif [[ "${DIMENSIONINDEX}" == "1" ]]; then
                        LABEL="md"
                    else
                        LABEL="sm"
                    fi
                fi
                ((DIMENSIONINDEX++))
            done

            echo "resized $FILE $QUAL $SIZE"
            # Use ImageMagick to resize the image to the specified dimensions and save it to the compressed directory
            magick "${FILE}" -resize "${SIZE}^" -quality ${QUAL} -extent "${SIZE}" "${IMAGE_DIR}/compressed/${SLUG}_${LABEL}.${EXTENSION}"
        fi
    done
done
